name: Runa

on:
  workflow_call:
    secrets:
      GITHUB_ACCESS_TOKEN:
        required: true
      APP_ID:
        required: false
      APP_PRIVATE_KEY:
        required: false
      OPENAI_API_KEY:
        required: false
      ANTHROPIC_API_KEY:
        required: false
      GOOGLE_API_KEY:
        required: false
      OPENROUTER_API_KEY:
        required: false
      HUGGINGFACE_API_KEY:
        required: false
      MODEL_NAME:
        required: true
      MODEL_NAME_FOR_STRUCTURED_OUTPUT:
        required: false

permissions:
  contents: read
  pull-requests: write
  issues: write

concurrency:
  group: runa-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_ACCESS_TOKEN }}
      APP_ID: ${{ secrets.APP_ID }}
      APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: vssavosko/runa
          ref: main
          path: runa

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: "9"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: runa/pnpm-lock.yaml

      - name: Install dependencies
        working-directory: runa
        run: pnpm install --frozen-lockfile

      - name: Build Runa
        working-directory: runa
        run: pnpm build:ci

      - name: Create GitHub App token (optional)
        id: app
        if: ${{ env.APP_ID != '' && env.APP_PRIVATE_KEY != '' }}
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ env.APP_ID }}
          private-key: ${{ env.APP_PRIVATE_KEY }}

      - name: Set GitHub App token (optional)
        if: ${{ steps.app.outputs.token != '' }}
        run: echo "GITHUB_ACCESS_TOKEN=${{ steps.app.outputs.token }}" >> $GITHUB_ENV

      - name: Find Pull Request
        id: find-pull-request
        working-directory: runa
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          INPUT_REF: ${{ github.ref }}
        run: pnpm find-pull-request

      - name: Start Runa
        working-directory: runa
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          HUGGINGFACE_API_KEY: ${{ secrets.HUGGINGFACE_API_KEY }}
          MODEL_NAME: ${{ secrets.MODEL_NAME }}
          MODEL_NAME_FOR_STRUCTURED_OUTPUT: ${{ secrets.MODEL_NAME_FOR_STRUCTURED_OUTPUT }}
          PULL_REQUEST_LINK: ${{ steps.find-pull-request.outputs.link }}
        run: pnpm start:runa
